pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
        DOCKER_IMAGE = 'yourdockerhubusername/messaging_app:latest'
        DOCKERHUB_CREDENTIALS = 'your-dockerhub-credentials-id'
    }

    stages {
        stage('Checkout') {
            steps {
                // Explicitly specify branch for the check
                git branch: 'main', credentialsId: 'your-github-credentials-id', url: 'https://github.com/your-username/your-repo.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'python3 -m venv $VENV_DIR'
                sh '. $VENV_DIR/bin/activate && pip3 install --upgrade pip'
                sh '. $VENV_DIR/bin/activate && pip3 install -r messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                sh '. $VENV_DIR/bin/activate && pytest --junitxml=report.xml'
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(env.DOCKER_IMAGE)
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', env.DOCKERHUB_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
            }
        }
    }
    triggers {
        // No automatic triggers; run manually
    }
}